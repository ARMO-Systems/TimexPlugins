//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Timex.HirschPlugin.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkingArea", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class WorkingArea : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.DirectedArea[] DirectedAreasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntegrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.DirectedArea[] DirectedAreas {
            get {
                return this.DirectedAreasField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectedAreasField, value) != true)) {
                    this.DirectedAreasField = value;
                    this.RaisePropertyChanged("DirectedAreas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntegrationID {
            get {
                return this.IntegrationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrationIDField, value) != true)) {
                    this.IntegrationIDField = value;
                    this.RaisePropertyChanged("IntegrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectedArea", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class DirectedArea : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Area AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.DirectionType DirectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Area Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.DirectionType DirectionType {
            get {
                return this.DirectionTypeField;
            }
            set {
                if ((this.DirectionTypeField.Equals(value) != true)) {
                    this.DirectionTypeField = value;
                    this.RaisePropertyChanged("DirectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Area", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Area : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.RegistrationPoint[] RegistrationPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.RegistrationPoint[] RegistrationPoints {
            get {
                return this.RegistrationPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationPointsField, value) != true)) {
                    this.RegistrationPointsField = value;
                    this.RaisePropertyChanged("RegistrationPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectionType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum DirectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enter = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exit = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationPoint", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class RegistrationPoint : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntegrationIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntegrationID {
            get {
                return this.IntegrationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrationIDField, value) != true)) {
                    this.IntegrationIDField = value;
                    this.RaisePropertyChanged("IntegrationID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.Enter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.Device))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.AccessPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.AdditionalReader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.Exit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.Workstation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.LogicalElement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.LogicalLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.RegistrationPoint))]
    public partial class Source : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.SourceType SourceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.SourceType SourceType {
            get {
                return this.SourceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceTypeField, value) != true)) {
                    this.SourceTypeField = value;
                    this.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class SourceType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.SourceT STypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.SourceT SType {
            get {
                return this.STypeField;
            }
            set {
                if ((this.STypeField.Equals(value) != true)) {
                    this.STypeField = value;
                    this.RaisePropertyChanged("SType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enter", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Enter : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Device DeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Timex.HirschPlugin.ServiceReference.EnterType> EnterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Device Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Timex.HirschPlugin.ServiceReference.EnterType> EnterType {
            get {
                return this.EnterTypeField;
            }
            set {
                if ((this.EnterTypeField.Equals(value) != true)) {
                    this.EnterTypeField = value;
                    this.RaisePropertyChanged("EnterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Device : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.AccessPoint[] AccessPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.DeviceConnectionType ActiveConnectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.TimeZone TimeZoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.AccessPoint[] AccessPoints {
            get {
                return this.AccessPointsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessPointsField, value) != true)) {
                    this.AccessPointsField = value;
                    this.RaisePropertyChanged("AccessPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.DeviceConnectionType ActiveConnectionType {
            get {
                return this.ActiveConnectionTypeField;
            }
            set {
                if ((this.ActiveConnectionTypeField.Equals(value) != true)) {
                    this.ActiveConnectionTypeField = value;
                    this.RaisePropertyChanged("ActiveConnectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComPort {
            get {
                return this.ComPortField;
            }
            set {
                if ((this.ComPortField.Equals(value) != true)) {
                    this.ComPortField = value;
                    this.RaisePropertyChanged("ComPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DevID {
            get {
                return this.DevIDField;
            }
            set {
                if ((this.DevIDField.Equals(value) != true)) {
                    this.DevIDField = value;
                    this.RaisePropertyChanged("DevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firmware {
            get {
                return this.FirmwareField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareField, value) != true)) {
                    this.FirmwareField = value;
                    this.RaisePropertyChanged("Firmware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.TimeZone TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessPoint", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class AccessPoint : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.AdditionalReader AdditionalReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.IdentificationMode IdentificationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.AdditionalReader AdditionalReader {
            get {
                return this.AdditionalReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalReaderField, value) != true)) {
                    this.AdditionalReaderField = value;
                    this.RaisePropertyChanged("AdditionalReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressDescription {
            get {
                return this.AddressDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressDescriptionField, value) != true)) {
                    this.AddressDescriptionField = value;
                    this.RaisePropertyChanged("AddressDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Door {
            get {
                return this.DoorField;
            }
            set {
                if ((this.DoorField.Equals(value) != true)) {
                    this.DoorField = value;
                    this.RaisePropertyChanged("Door");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.IdentificationMode Identification {
            get {
                return this.IdentificationField;
            }
            set {
                if ((this.IdentificationField.Equals(value) != true)) {
                    this.IdentificationField = value;
                    this.RaisePropertyChanged("Identification");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalReader", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class AdditionalReader : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Device SlaveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Device Slave {
            get {
                return this.SlaveField;
            }
            set {
                if ((object.ReferenceEquals(this.SlaveField, value) != true)) {
                    this.SlaveField = value;
                    this.RaisePropertyChanged("Slave");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exit", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Exit : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Device DeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Device Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workstation", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Workstation : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogicalElement", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class LogicalElement : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.ElementType ElementTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.ElementType ElementType {
            get {
                return this.ElementTypeField;
            }
            set {
                if ((this.ElementTypeField.Equals(value) != true)) {
                    this.ElementTypeField = value;
                    this.RaisePropertyChanged("ElementType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogicalLink", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class LogicalLink : Timex.HirschPlugin.ServiceReference.Source {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.LogicalLinkXPOActionType ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Device DeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.EventType InEventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Source InputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OutTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Source OutputField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.LogicalLinkXPOActionType Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Device Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.EventType InEventType {
            get {
                return this.InEventTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InEventTypeField, value) != true)) {
                    this.InEventTypeField = value;
                    this.RaisePropertyChanged("InEventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Source Input {
            get {
                return this.InputField;
            }
            set {
                if ((object.ReferenceEquals(this.InputField, value) != true)) {
                    this.InputField = value;
                    this.RaisePropertyChanged("Input");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OutTime {
            get {
                return this.OutTimeField;
            }
            set {
                if ((this.OutTimeField.Equals(value) != true)) {
                    this.OutTimeField = value;
                    this.RaisePropertyChanged("OutTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Source Output {
            get {
                return this.OutputField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputField, value) != true)) {
                    this.OutputField = value;
                    this.RaisePropertyChanged("Output");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceT", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO.Source")]
    public enum SourceT : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Device = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessPoint = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegistrationPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workstation = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionalReader = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enter = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exit = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogicalLink = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogicalElement = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnterType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO.Source.Vhodi" +
        "Vihodi")]
    public enum EnterType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormallyOpen = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormallyClosed = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeZone", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class TimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConnectionType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.CommonClasses")]
    public enum DeviceConnectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ethernet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rs232Rs485 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoteByUSB = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationMode", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum IdentificationMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintOrCodeOrCard = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fingerprint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Code = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintAndCard = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintOrCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintOrCard = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CodeOrCard = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PinAndFingerprint = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintAndCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CodeAndCard = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintAndCodeAndCard = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PinAndFingerprintAndCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FingerprintAndCardOrPin = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Face = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaceAndCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaceAndCard = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaceAndCodeAndCard = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FaceOrCodeOrCard = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vein = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeinAndCard = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeinAndCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeinAndCardAndCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeinOrCodeOrCard = 25,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElementType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO.Source.Logic" +
        "alRelations")]
    public enum ElementType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllAccessPoints = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllEntrances = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class EventType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogicalLinkXPO.ActionType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO.Source.Logic" +
        "alRelations")]
    public enum LogicalLinkXPOActionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        On = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pulse = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
    [System.SerializableAttribute()]
    public partial class ServiceFaut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaultInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultInfo {
            get {
                return this.FaultInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultInfoField, value) != true)) {
                    this.FaultInfoField = value;
                    this.RaisePropertyChanged("FaultInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rule", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Rule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Transfer IntervalTransferForFreeSmenaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Mode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PermittedAttendanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PermittedEarlyArrivalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PermittedEarlyDepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PermittedLateArrivalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PermittedLateDepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoundStartMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.RoundTo RoundToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SearchEventsIntervalAfterShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SearchEventsIntervalBeforeShiftField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Transfer IntervalTransferForFreeSmena {
            get {
                return this.IntervalTransferForFreeSmenaField;
            }
            set {
                if ((this.IntervalTransferForFreeSmenaField.Equals(value) != true)) {
                    this.IntervalTransferForFreeSmenaField = value;
                    this.RaisePropertyChanged("IntervalTransferForFreeSmena");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Mode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PermittedAttendance {
            get {
                return this.PermittedAttendanceField;
            }
            set {
                if ((this.PermittedAttendanceField.Equals(value) != true)) {
                    this.PermittedAttendanceField = value;
                    this.RaisePropertyChanged("PermittedAttendance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PermittedEarlyArrival {
            get {
                return this.PermittedEarlyArrivalField;
            }
            set {
                if ((this.PermittedEarlyArrivalField.Equals(value) != true)) {
                    this.PermittedEarlyArrivalField = value;
                    this.RaisePropertyChanged("PermittedEarlyArrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PermittedEarlyDeparture {
            get {
                return this.PermittedEarlyDepartureField;
            }
            set {
                if ((this.PermittedEarlyDepartureField.Equals(value) != true)) {
                    this.PermittedEarlyDepartureField = value;
                    this.RaisePropertyChanged("PermittedEarlyDeparture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PermittedLateArrival {
            get {
                return this.PermittedLateArrivalField;
            }
            set {
                if ((this.PermittedLateArrivalField.Equals(value) != true)) {
                    this.PermittedLateArrivalField = value;
                    this.RaisePropertyChanged("PermittedLateArrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PermittedLateDeparture {
            get {
                return this.PermittedLateDepartureField;
            }
            set {
                if ((this.PermittedLateDepartureField.Equals(value) != true)) {
                    this.PermittedLateDepartureField = value;
                    this.RaisePropertyChanged("PermittedLateDeparture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoundStartMin {
            get {
                return this.RoundStartMinField;
            }
            set {
                if ((this.RoundStartMinField.Equals(value) != true)) {
                    this.RoundStartMinField = value;
                    this.RaisePropertyChanged("RoundStartMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.RoundTo RoundTo {
            get {
                return this.RoundToField;
            }
            set {
                if ((this.RoundToField.Equals(value) != true)) {
                    this.RoundToField = value;
                    this.RaisePropertyChanged("RoundTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SearchEventsIntervalAfterShift {
            get {
                return this.SearchEventsIntervalAfterShiftField;
            }
            set {
                if ((this.SearchEventsIntervalAfterShiftField.Equals(value) != true)) {
                    this.SearchEventsIntervalAfterShiftField = value;
                    this.RaisePropertyChanged("SearchEventsIntervalAfterShift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SearchEventsIntervalBeforeShift {
            get {
                return this.SearchEventsIntervalBeforeShiftField;
            }
            set {
                if ((this.SearchEventsIntervalBeforeShiftField.Equals(value) != true)) {
                    this.SearchEventsIntervalBeforeShiftField = value;
                    this.RaisePropertyChanged("SearchEventsIntervalBeforeShift");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transfer", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum Transfer : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextDay = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisDay = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiggestPart = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mode", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum Mode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstLastEvents = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Soft = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hard = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoundTo", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum RoundTo : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotRound = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        To5Minutes = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        To10Minutes = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        To30Minutes = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        To1Hour = 60,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayShift", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class DayShift : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Shift ShiftField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayNumber {
            get {
                return this.DayNumberField;
            }
            set {
                if ((this.DayNumberField.Equals(value) != true)) {
                    this.DayNumberField = value;
                    this.RaisePropertyChanged("DayNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Shift Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftField, value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shift", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Shift : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AutomaticCorrectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.ShiftInterval[] IntervalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDayOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Period PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateForPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShiftEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShiftStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.ShiftType ShiftTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AutomaticCorrection {
            get {
                return this.AutomaticCorrectionField;
            }
            set {
                if ((this.AutomaticCorrectionField.Equals(value) != true)) {
                    this.AutomaticCorrectionField = value;
                    this.RaisePropertyChanged("AutomaticCorrection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.ShiftInterval[] Intervals {
            get {
                return this.IntervalsField;
            }
            set {
                if ((object.ReferenceEquals(this.IntervalsField, value) != true)) {
                    this.IntervalsField = value;
                    this.RaisePropertyChanged("Intervals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDayOff {
            get {
                return this.IsDayOffField;
            }
            set {
                if ((this.IsDayOffField.Equals(value) != true)) {
                    this.IsDayOffField = value;
                    this.RaisePropertyChanged("IsDayOff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Period Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateForPeriod {
            get {
                return this.RateForPeriodField;
            }
            set {
                if ((this.RateForPeriodField.Equals(value) != true)) {
                    this.RateForPeriodField = value;
                    this.RaisePropertyChanged("RateForPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShiftEnd {
            get {
                return this.ShiftEndField;
            }
            set {
                if ((this.ShiftEndField.Equals(value) != true)) {
                    this.ShiftEndField = value;
                    this.RaisePropertyChanged("ShiftEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShiftStart {
            get {
                return this.ShiftStartField;
            }
            set {
                if ((this.ShiftStartField.Equals(value) != true)) {
                    this.ShiftStartField = value;
                    this.RaisePropertyChanged("ShiftStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.ShiftType ShiftType {
            get {
                return this.ShiftTypeField;
            }
            set {
                if ((this.ShiftTypeField.Equals(value) != true)) {
                    this.ShiftTypeField = value;
                    this.RaisePropertyChanged("ShiftType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShiftInterval", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class ShiftInterval : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BreakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Begin {
            get {
                return this.BeginField;
            }
            set {
                if ((this.BeginField.Equals(value) != true)) {
                    this.BeginField = value;
                    this.RaisePropertyChanged("Begin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Break {
            get {
                return this.BreakField;
            }
            set {
                if ((this.BreakField.Equals(value) != true)) {
                    this.BreakField = value;
                    this.RaisePropertyChanged("Break");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Period", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.CommonClasses")]
    public enum Period : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShiftType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.CommonClasses")]
    public enum ShiftType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fixed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Free = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimexOperator", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class TimexOperator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MidNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MidName {
            get {
                return this.MidNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MidNameField, value) != true)) {
                    this.MidNameField = value;
                    this.RaisePropertyChanged("MidName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLevel", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class AccessLevel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorktimeInfo", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class WorktimeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Adjustment AbsenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AbsentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ArrivalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Shift CurrentShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EarlyDepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Employee EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDayBeforeHolidayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDayOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHolidayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LetterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NightOvertimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NightWorkedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NotWorkedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OvertimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Schedule ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimeLateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAdjustmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WorkedTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Adjustment Absence {
            get {
                return this.AbsenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsenceField, value) != true)) {
                    this.AbsenceField = value;
                    this.RaisePropertyChanged("Absence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AbsentTime {
            get {
                return this.AbsentTimeField;
            }
            set {
                if ((this.AbsentTimeField.Equals(value) != true)) {
                    this.AbsentTimeField = value;
                    this.RaisePropertyChanged("AbsentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Arrival {
            get {
                return this.ArrivalField;
            }
            set {
                if ((this.ArrivalField.Equals(value) != true)) {
                    this.ArrivalField = value;
                    this.RaisePropertyChanged("Arrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Shift CurrentShift {
            get {
                return this.CurrentShiftField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentShiftField, value) != true)) {
                    this.CurrentShiftField = value;
                    this.RaisePropertyChanged("CurrentShift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Departure {
            get {
                return this.DepartureField;
            }
            set {
                if ((this.DepartureField.Equals(value) != true)) {
                    this.DepartureField = value;
                    this.RaisePropertyChanged("Departure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EarlyDeparture {
            get {
                return this.EarlyDepartureField;
            }
            set {
                if ((this.EarlyDepartureField.Equals(value) != true)) {
                    this.EarlyDepartureField = value;
                    this.RaisePropertyChanged("EarlyDeparture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDayBeforeHoliday {
            get {
                return this.IsDayBeforeHolidayField;
            }
            set {
                if ((this.IsDayBeforeHolidayField.Equals(value) != true)) {
                    this.IsDayBeforeHolidayField = value;
                    this.RaisePropertyChanged("IsDayBeforeHoliday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDayOff {
            get {
                return this.IsDayOffField;
            }
            set {
                if ((this.IsDayOffField.Equals(value) != true)) {
                    this.IsDayOffField = value;
                    this.RaisePropertyChanged("IsDayOff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHoliday {
            get {
                return this.IsHolidayField;
            }
            set {
                if ((this.IsHolidayField.Equals(value) != true)) {
                    this.IsHolidayField = value;
                    this.RaisePropertyChanged("IsHoliday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTransfer {
            get {
                return this.IsTransferField;
            }
            set {
                if ((this.IsTransferField.Equals(value) != true)) {
                    this.IsTransferField = value;
                    this.RaisePropertyChanged("IsTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LetterCode {
            get {
                return this.LetterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LetterCodeField, value) != true)) {
                    this.LetterCodeField = value;
                    this.RaisePropertyChanged("LetterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NightOvertime {
            get {
                return this.NightOvertimeField;
            }
            set {
                if ((this.NightOvertimeField.Equals(value) != true)) {
                    this.NightOvertimeField = value;
                    this.RaisePropertyChanged("NightOvertime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NightWorkedTime {
            get {
                return this.NightWorkedTimeField;
            }
            set {
                if ((this.NightWorkedTimeField.Equals(value) != true)) {
                    this.NightWorkedTimeField = value;
                    this.RaisePropertyChanged("NightWorkedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NotWorkedTime {
            get {
                return this.NotWorkedTimeField;
            }
            set {
                if ((this.NotWorkedTimeField.Equals(value) != true)) {
                    this.NotWorkedTimeField = value;
                    this.RaisePropertyChanged("NotWorkedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Overtime {
            get {
                return this.OvertimeField;
            }
            set {
                if ((this.OvertimeField.Equals(value) != true)) {
                    this.OvertimeField = value;
                    this.RaisePropertyChanged("Overtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Schedule Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimeLate {
            get {
                return this.TimeLateField;
            }
            set {
                if ((this.TimeLateField.Equals(value) != true)) {
                    this.TimeLateField = value;
                    this.RaisePropertyChanged("TimeLate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAdjustments {
            get {
                return this.UseAdjustmentsField;
            }
            set {
                if ((this.UseAdjustmentsField.Equals(value) != true)) {
                    this.UseAdjustmentsField = value;
                    this.RaisePropertyChanged("UseAdjustments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WorkedTime {
            get {
                return this.WorkedTimeField;
            }
            set {
                if ((this.WorkedTimeField.Equals(value) != true)) {
                    this.WorkedTimeField = value;
                    this.RaisePropertyChanged("WorkedTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adjustment", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Adjustment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.AdjustmentType AdjustmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Employee EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.TimeZone TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.AdjustmentType AdjustmentType {
            get {
                return this.AdjustmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjustmentTypeField, value) != true)) {
                    this.AdjustmentTypeField = value;
                    this.RaisePropertyChanged("AdjustmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Begin {
            get {
                return this.BeginField;
            }
            set {
                if ((this.BeginField.Equals(value) != true)) {
                    this.BeginField = value;
                    this.RaisePropertyChanged("Begin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.TimeZone TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.WorkingArea AccessAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.AccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthdayPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CardValidEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CardValidStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomField6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DismissalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EmploymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntegrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MidNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] SchedulesWithStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.WorkingArea AccessArea {
            get {
                return this.AccessAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessAreaField, value) != true)) {
                    this.AccessAreaField = value;
                    this.RaisePropertyChanged("AccessArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.AccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessLevelField, value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthdayPlace {
            get {
                return this.BirthdayPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthdayPlaceField, value) != true)) {
                    this.BirthdayPlaceField = value;
                    this.RaisePropertyChanged("BirthdayPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((this.CardNumberField.Equals(value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CardValidEndDate {
            get {
                return this.CardValidEndDateField;
            }
            set {
                if ((this.CardValidEndDateField.Equals(value) != true)) {
                    this.CardValidEndDateField = value;
                    this.RaisePropertyChanged("CardValidEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CardValidStartDate {
            get {
                return this.CardValidStartDateField;
            }
            set {
                if ((this.CardValidStartDateField.Equals(value) != true)) {
                    this.CardValidStartDateField = value;
                    this.RaisePropertyChanged("CardValidStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField1 {
            get {
                return this.CustomField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField1Field, value) != true)) {
                    this.CustomField1Field = value;
                    this.RaisePropertyChanged("CustomField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField2 {
            get {
                return this.CustomField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField2Field, value) != true)) {
                    this.CustomField2Field = value;
                    this.RaisePropertyChanged("CustomField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField3 {
            get {
                return this.CustomField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField3Field, value) != true)) {
                    this.CustomField3Field = value;
                    this.RaisePropertyChanged("CustomField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField4 {
            get {
                return this.CustomField4Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField4Field, value) != true)) {
                    this.CustomField4Field = value;
                    this.RaisePropertyChanged("CustomField4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField5 {
            get {
                return this.CustomField5Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField5Field, value) != true)) {
                    this.CustomField5Field = value;
                    this.RaisePropertyChanged("CustomField5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomField6 {
            get {
                return this.CustomField6Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomField6Field, value) != true)) {
                    this.CustomField6Field = value;
                    this.RaisePropertyChanged("CustomField6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DismissalDate {
            get {
                return this.DismissalDateField;
            }
            set {
                if ((this.DismissalDateField.Equals(value) != true)) {
                    this.DismissalDateField = value;
                    this.RaisePropertyChanged("DismissalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EmploymentDate {
            get {
                return this.EmploymentDateField;
            }
            set {
                if ((this.EmploymentDateField.Equals(value) != true)) {
                    this.EmploymentDateField = value;
                    this.RaisePropertyChanged("EmploymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntegrationID {
            get {
                return this.IntegrationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrationIDField, value) != true)) {
                    this.IntegrationIDField = value;
                    this.RaisePropertyChanged("IntegrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MidName {
            get {
                return this.MidNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MidNameField, value) != true)) {
                    this.MidNameField = value;
                    this.RaisePropertyChanged("MidName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pin {
            get {
                return this.PinField;
            }
            set {
                if ((this.PinField.Equals(value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] SchedulesWithStartDate {
            get {
                return this.SchedulesWithStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulesWithStartDateField, value) != true)) {
                    this.SchedulesWithStartDateField = value;
                    this.RaisePropertyChanged("SchedulesWithStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableNumber {
            get {
                return this.TableNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNumberField, value) != true)) {
                    this.TableNumberField = value;
                    this.RaisePropertyChanged("TableNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Schedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstShiftDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.DayShift[] ShiftsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseProductionCalendarField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstShiftDate {
            get {
                return this.FirstShiftDateField;
            }
            set {
                if ((this.FirstShiftDateField.Equals(value) != true)) {
                    this.FirstShiftDateField = value;
                    this.RaisePropertyChanged("FirstShiftDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.DayShift[] Shifts {
            get {
                return this.ShiftsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftsField, value) != true)) {
                    this.ShiftsField = value;
                    this.RaisePropertyChanged("Shifts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseProductionCalendar {
            get {
                return this.UseProductionCalendarField;
            }
            set {
                if ((this.UseProductionCalendarField.Equals(value) != true)) {
                    this.UseProductionCalendarField = value;
                    this.RaisePropertyChanged("UseProductionCalendar");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdjustmentType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class AdjustmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.CountAs CountAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LetterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.CountAs CountAs {
            get {
                return this.CountAsField;
            }
            set {
                if ((this.CountAsField.Equals(value) != true)) {
                    this.CountAsField = value;
                    this.RaisePropertyChanged("CountAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LetterCode {
            get {
                return this.LetterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LetterCodeField, value) != true)) {
                    this.LetterCodeField = value;
                    this.RaisePropertyChanged("LetterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountAs", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum CountAs : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absence = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayOff = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ControlPoint = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Company : Timex.HirschPlugin.ServiceReference.Department {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.Company))]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntegrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Department ParentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntegrationID {
            get {
                return this.IntegrationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrationIDField, value) != true)) {
                    this.IntegrationIDField = value;
                    this.RaisePropertyChanged("IntegrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Department Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntegrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntegrationID {
            get {
                return this.IntegrationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrationIDField, value) != true)) {
                    this.IntegrationIDField = value;
                    this.RaisePropertyChanged("IntegrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleWithStartDate", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class ScheduleWithStartDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Schedule ScheduleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginningDate {
            get {
                return this.BeginningDateField;
            }
            set {
                if ((this.BeginningDateField.Equals(value) != true)) {
                    this.BeginningDateField = value;
                    this.RaisePropertyChanged("BeginningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Schedule Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorktimeEvent", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class WorktimeEvent : Timex.HirschPlugin.ServiceReference.Event {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.Employee EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntegrationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.RegistrationPoint RegistrationPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeUTCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.WorktimeEventType WorktimeEventTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntegrationID {
            get {
                return this.IntegrationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IntegrationIDField, value) != true)) {
                    this.IntegrationIDField = value;
                    this.RaisePropertyChanged("IntegrationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.RegistrationPoint RegistrationPoint {
            get {
                return this.RegistrationPointField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationPointField, value) != true)) {
                    this.RegistrationPointField = value;
                    this.RaisePropertyChanged("RegistrationPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeUTC {
            get {
                return this.TimeUTCField;
            }
            set {
                if ((this.TimeUTCField.Equals(value) != true)) {
                    this.TimeUTCField = value;
                    this.RaisePropertyChanged("TimeUTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.WorktimeEventType WorktimeEventType {
            get {
                return this.WorktimeEventTypeField;
            }
            set {
                if ((this.WorktimeEventTypeField.Equals(value) != true)) {
                    this.WorktimeEventTypeField = value;
                    this.RaisePropertyChanged("WorktimeEventType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timex.HirschPlugin.ServiceReference.WorktimeEvent))]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timex.HirschPlugin.ServiceReference.TimeZone TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timex.HirschPlugin.ServiceReference.TimeZone TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorktimeEventType", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.XPO.Events.Workt" +
        "imeEvents")]
    public enum WorktimeEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ControlPoint = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDetailInfo", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.SDKService.SDKClasses")]
    [System.SerializableAttribute()]
    public partial class EmployeeDetailInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CustomPicture1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CustomPicture1 {
            get {
                return this.CustomPicture1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CustomPicture1Field, value) != true)) {
                    this.CustomPicture1Field = value;
                    this.RaisePropertyChanged("CustomPicture1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oid {
            get {
                return this.OidField;
            }
            set {
                if ((object.ReferenceEquals(this.OidField, value) != true)) {
                    this.OidField = value;
                    this.RaisePropertyChanged("Oid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.ISDKService")]
    public interface ISDKService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackWorkingAreas", ReplyAction="http://tempuri.org/ISDKService/GetPackWorkingAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackWorkingAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.WorkingArea[] GetPackWorkingAreas(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateWorkingAreas", ReplyAction="http://tempuri.org/ISDKService/UpdateWorkingAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateWorkingAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateWorkingAreas(string session, Timex.HirschPlugin.ServiceReference.WorkingArea[] WorkingArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateRules", ReplyAction="http://tempuri.org/ISDKService/CreateRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateRulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Rule[] CreateRules(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveRules", ReplyAction="http://tempuri.org/ISDKService/RemoveRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveRulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveRules(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetRules", ReplyAction="http://tempuri.org/ISDKService/GetRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetRulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Rule[] GetRules(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackRules", ReplyAction="http://tempuri.org/ISDKService/GetPackRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackRulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Rule[] GetPackRules(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateRules", ReplyAction="http://tempuri.org/ISDKService/UpdateRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateRulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateRules(string session, Timex.HirschPlugin.ServiceReference.Rule[] Rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateDayShifts", ReplyAction="http://tempuri.org/ISDKService/CreateDayShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateDayShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.DayShift[] CreateDayShifts(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveDayShifts", ReplyAction="http://tempuri.org/ISDKService/RemoveDayShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveDayShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveDayShifts(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetDayShifts", ReplyAction="http://tempuri.org/ISDKService/GetDayShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetDayShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.DayShift[] GetDayShifts(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackDayShifts", ReplyAction="http://tempuri.org/ISDKService/GetPackDayShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackDayShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.DayShift[] GetPackDayShifts(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateDayShifts", ReplyAction="http://tempuri.org/ISDKService/UpdateDayShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateDayShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateDayShifts(string session, Timex.HirschPlugin.ServiceReference.DayShift[] DayShift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateShifts", ReplyAction="http://tempuri.org/ISDKService/CreateShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Shift[] CreateShifts(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveShifts", ReplyAction="http://tempuri.org/ISDKService/RemoveShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveShifts(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetShifts", ReplyAction="http://tempuri.org/ISDKService/GetShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Shift[] GetShifts(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackShifts", ReplyAction="http://tempuri.org/ISDKService/GetPackShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Shift[] GetPackShifts(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateShifts", ReplyAction="http://tempuri.org/ISDKService/UpdateShiftsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateShiftsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateShifts(string session, Timex.HirschPlugin.ServiceReference.Shift[] Shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetEnters", ReplyAction="http://tempuri.org/ISDKService/GetEntersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetEntersServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Enter[] GetEnters(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackEnters", ReplyAction="http://tempuri.org/ISDKService/GetPackEntersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackEntersServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Enter[] GetPackEnters(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetExits", ReplyAction="http://tempuri.org/ISDKService/GetExitsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetExitsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Exit[] GetExits(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackExits", ReplyAction="http://tempuri.org/ISDKService/GetPackExitsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackExitsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Exit[] GetPackExits(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetTimexOperators", ReplyAction="http://tempuri.org/ISDKService/GetTimexOperatorsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetTimexOperatorsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.TimexOperator[] GetTimexOperators(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackTimexOperators", ReplyAction="http://tempuri.org/ISDKService/GetPackTimexOperatorsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackTimexOperatorsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.TimexOperator[] GetPackTimexOperators(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetTimeZones", ReplyAction="http://tempuri.org/ISDKService/GetTimeZonesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetTimeZonesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.TimeZone[] GetTimeZones(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackTimeZones", ReplyAction="http://tempuri.org/ISDKService/GetPackTimeZonesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackTimeZonesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.TimeZone[] GetPackTimeZones(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateAccessLevels", ReplyAction="http://tempuri.org/ISDKService/CreateAccessLevelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateAccessLevelsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AccessLevel[] CreateAccessLevels(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveAccessLevels", ReplyAction="http://tempuri.org/ISDKService/RemoveAccessLevelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveAccessLevelsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveAccessLevels(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetAccessLevels", ReplyAction="http://tempuri.org/ISDKService/GetAccessLevelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetAccessLevelsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AccessLevel[] GetAccessLevels(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackAccessLevels", ReplyAction="http://tempuri.org/ISDKService/GetPackAccessLevelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackAccessLevelsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AccessLevel[] GetPackAccessLevels(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateAccessLevels", ReplyAction="http://tempuri.org/ISDKService/UpdateAccessLevelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateAccessLevelsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateAccessLevels(string session, Timex.HirschPlugin.ServiceReference.AccessLevel[] AccessLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateAreas", ReplyAction="http://tempuri.org/ISDKService/CreateAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Area[] CreateAreas(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveAreas", ReplyAction="http://tempuri.org/ISDKService/RemoveAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveAreas(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetAreas", ReplyAction="http://tempuri.org/ISDKService/GetAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Area[] GetAreas(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackAreas", ReplyAction="http://tempuri.org/ISDKService/GetPackAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Area[] GetPackAreas(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateAreas", ReplyAction="http://tempuri.org/ISDKService/UpdateAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateAreas(string session, Timex.HirschPlugin.ServiceReference.Area[] Area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetWorkTimeInfo", ReplyAction="http://tempuri.org/ISDKService/GetWorkTimeInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetWorkTimeInfoServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.WorktimeInfo[] GetWorkTimeInfo(string session, string employeeId, System.DateTime startDate, System.DateTime endDate, string ruleId, bool isCalculateBySchedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetWorktimeEvents", ReplyAction="http://tempuri.org/ISDKService/GetWorktimeEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetWorktimeEventsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.WorktimeEvent[] GetWorktimeEvents(string session, System.DateTime fromUTC, System.DateTime toUTC, string timeZoneId, string employeeId, int maxCount, bool recent, string appName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateWorktimeEvent", ReplyAction="http://tempuri.org/ISDKService/CreateWorktimeEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateWorktimeEventServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        int CreateWorktimeEvent(string session, string appName, string employeeId, string registrationPointId, System.DateTime timeUTC, string timeZoneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveWorktimeEvent", ReplyAction="http://tempuri.org/ISDKService/RemoveWorktimeEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveWorktimeEventServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveWorktimeEvent(string session, string worktimeEventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetAdjustmentsByInterval", ReplyAction="http://tempuri.org/ISDKService/GetAdjustmentsByIntervalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetAdjustmentsByIntervalServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Adjustment[] GetAdjustmentsByInterval(string session, string employeeId, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetShiftByDate", ReplyAction="http://tempuri.org/ISDKService/GetShiftByDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetShiftByDateServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Shift GetShiftByDate(string session, string employeeId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetEventTypes", ReplyAction="http://tempuri.org/ISDKService/GetEventTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetEventTypesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        string[] GetEventTypes(string session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/AccessPointsOpen", ReplyAction="http://tempuri.org/ISDKService/AccessPointsOpenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/AccessPointsOpenServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void AccessPointsOpen(string session, string[] accessPointIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/AccessPointsClose", ReplyAction="http://tempuri.org/ISDKService/AccessPointsCloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/AccessPointsCloseServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void AccessPointsClose(string session, string[] accessPointIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/AccessPointsUnblock", ReplyAction="http://tempuri.org/ISDKService/AccessPointsUnblockResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/AccessPointsUnblockServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void AccessPointsUnblock(string session, string[] accessPointIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/SubscribeOnEvents", ReplyAction="http://tempuri.org/ISDKService/SubscribeOnEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/SubscribeOnEventsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void SubscribeOnEvents(string session, string[] eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UnsubscribeFromEvents", ReplyAction="http://tempuri.org/ISDKService/UnsubscribeFromEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UnsubscribeFromEventsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UnsubscribeFromEvents(string session, string[] eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/LogonUser", ReplyAction="http://tempuri.org/ISDKService/LogonUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/LogonUserServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        string LogonUser(string userName, string password, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/LogoutUser", ReplyAction="http://tempuri.org/ISDKService/LogoutUserResponse")]
        void LogoutUser(string session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/HeartBeat", ReplyAction="http://tempuri.org/ISDKService/HeartBeatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/HeartBeatServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void HeartBeat(string session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetAdjustments", ReplyAction="http://tempuri.org/ISDKService/GetAdjustmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetAdjustmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Adjustment[] GetAdjustments(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackAdjustments", ReplyAction="http://tempuri.org/ISDKService/GetPackAdjustmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackAdjustmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Adjustment[] GetPackAdjustments(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateDepartments", ReplyAction="http://tempuri.org/ISDKService/CreateDepartmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateDepartmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Department[] CreateDepartments(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveDepartments", ReplyAction="http://tempuri.org/ISDKService/RemoveDepartmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveDepartmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveDepartments(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetDepartments", ReplyAction="http://tempuri.org/ISDKService/GetDepartmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetDepartmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Department[] GetDepartments(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackDepartments", ReplyAction="http://tempuri.org/ISDKService/GetPackDepartmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackDepartmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Department[] GetPackDepartments(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateDepartments", ReplyAction="http://tempuri.org/ISDKService/UpdateDepartmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateDepartmentsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateDepartments(string session, Timex.HirschPlugin.ServiceReference.Department[] Department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateCompanies", ReplyAction="http://tempuri.org/ISDKService/CreateCompaniesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateCompaniesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Company[] CreateCompanies(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveCompanies", ReplyAction="http://tempuri.org/ISDKService/RemoveCompaniesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveCompaniesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveCompanies(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetCompanies", ReplyAction="http://tempuri.org/ISDKService/GetCompaniesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetCompaniesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Company[] GetCompanies(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackCompanies", ReplyAction="http://tempuri.org/ISDKService/GetPackCompaniesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackCompaniesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Company[] GetPackCompanies(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateCompanies", ReplyAction="http://tempuri.org/ISDKService/UpdateCompaniesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateCompaniesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateCompanies(string session, Timex.HirschPlugin.ServiceReference.Company[] Company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetAdditionalReaders", ReplyAction="http://tempuri.org/ISDKService/GetAdditionalReadersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetAdditionalReadersServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AdditionalReader[] GetAdditionalReaders(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackAdditionalReaders", ReplyAction="http://tempuri.org/ISDKService/GetPackAdditionalReadersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackAdditionalReadersServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AdditionalReader[] GetPackAdditionalReaders(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateSchedulesWithStartDate", ReplyAction="http://tempuri.org/ISDKService/CreateSchedulesWithStartDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateSchedulesWithStartDateServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] CreateSchedulesWithStartDate(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveSchedulesWithStartDate", ReplyAction="http://tempuri.org/ISDKService/RemoveSchedulesWithStartDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveSchedulesWithStartDateServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveSchedulesWithStartDate(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetSchedulesWithStartDate", ReplyAction="http://tempuri.org/ISDKService/GetSchedulesWithStartDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetSchedulesWithStartDateServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] GetSchedulesWithStartDate(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackSchedulesWithStartDate", ReplyAction="http://tempuri.org/ISDKService/GetPackSchedulesWithStartDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackSchedulesWithStartDateServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] GetPackSchedulesWithStartDate(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateSchedulesWithStartDate", ReplyAction="http://tempuri.org/ISDKService/UpdateSchedulesWithStartDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateSchedulesWithStartDateServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateSchedulesWithStartDate(string session, Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] ScheduleWithStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateDirectedAreas", ReplyAction="http://tempuri.org/ISDKService/CreateDirectedAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateDirectedAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.DirectedArea[] CreateDirectedAreas(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveDirectedAreas", ReplyAction="http://tempuri.org/ISDKService/RemoveDirectedAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveDirectedAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveDirectedAreas(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetDirectedAreas", ReplyAction="http://tempuri.org/ISDKService/GetDirectedAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetDirectedAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.DirectedArea[] GetDirectedAreas(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackDirectedAreas", ReplyAction="http://tempuri.org/ISDKService/GetPackDirectedAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackDirectedAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.DirectedArea[] GetPackDirectedAreas(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateDirectedAreas", ReplyAction="http://tempuri.org/ISDKService/UpdateDirectedAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateDirectedAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateDirectedAreas(string session, Timex.HirschPlugin.ServiceReference.DirectedArea[] DirectedArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetWorkstations", ReplyAction="http://tempuri.org/ISDKService/GetWorkstationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetWorkstationsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Workstation[] GetWorkstations(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackWorkstations", ReplyAction="http://tempuri.org/ISDKService/GetPackWorkstationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackWorkstationsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Workstation[] GetPackWorkstations(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetDevices", ReplyAction="http://tempuri.org/ISDKService/GetDevicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetDevicesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Device[] GetDevices(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackDevices", ReplyAction="http://tempuri.org/ISDKService/GetPackDevicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackDevicesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Device[] GetPackDevices(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetLogicalElements", ReplyAction="http://tempuri.org/ISDKService/GetLogicalElementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetLogicalElementsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.LogicalElement[] GetLogicalElements(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackLogicalElements", ReplyAction="http://tempuri.org/ISDKService/GetPackLogicalElementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackLogicalElementsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.LogicalElement[] GetPackLogicalElements(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetLogicalLinks", ReplyAction="http://tempuri.org/ISDKService/GetLogicalLinksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetLogicalLinksServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.LogicalLink[] GetLogicalLinks(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackLogicalLinks", ReplyAction="http://tempuri.org/ISDKService/GetPackLogicalLinksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackLogicalLinksServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.LogicalLink[] GetPackLogicalLinks(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetAccessPoints", ReplyAction="http://tempuri.org/ISDKService/GetAccessPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetAccessPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AccessPoint[] GetAccessPoints(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackAccessPoints", ReplyAction="http://tempuri.org/ISDKService/GetPackAccessPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackAccessPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.AccessPoint[] GetPackAccessPoints(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateRegistrationPoints", ReplyAction="http://tempuri.org/ISDKService/CreateRegistrationPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateRegistrationPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.RegistrationPoint[] CreateRegistrationPoints(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveRegistrationPoints", ReplyAction="http://tempuri.org/ISDKService/RemoveRegistrationPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveRegistrationPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveRegistrationPoints(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetRegistrationPoints", ReplyAction="http://tempuri.org/ISDKService/GetRegistrationPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetRegistrationPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.RegistrationPoint[] GetRegistrationPoints(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackRegistrationPoints", ReplyAction="http://tempuri.org/ISDKService/GetPackRegistrationPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackRegistrationPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.RegistrationPoint[] GetPackRegistrationPoints(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateRegistrationPoints", ReplyAction="http://tempuri.org/ISDKService/UpdateRegistrationPointsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateRegistrationPointsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateRegistrationPoints(string session, Timex.HirschPlugin.ServiceReference.RegistrationPoint[] RegistrationPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateEmployees", ReplyAction="http://tempuri.org/ISDKService/CreateEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Employee[] CreateEmployees(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveEmployees", ReplyAction="http://tempuri.org/ISDKService/RemoveEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveEmployees(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetEmployees", ReplyAction="http://tempuri.org/ISDKService/GetEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Employee[] GetEmployees(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackEmployees", ReplyAction="http://tempuri.org/ISDKService/GetPackEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Employee[] GetPackEmployees(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateEmployees", ReplyAction="http://tempuri.org/ISDKService/UpdateEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateEmployees(string session, Timex.HirschPlugin.ServiceReference.Employee[] Employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetDetailInfoEmployees", ReplyAction="http://tempuri.org/ISDKService/GetDetailInfoEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetDetailInfoEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.EmployeeDetailInfo[] GetDetailInfoEmployees(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateDetailInfoEmployees", ReplyAction="http://tempuri.org/ISDKService/UpdateDetailInfoEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateDetailInfoEmployeesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateDetailInfoEmployees(string session, Timex.HirschPlugin.ServiceReference.EmployeeDetailInfo[] Employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateSchedules", ReplyAction="http://tempuri.org/ISDKService/CreateSchedulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateSchedulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Schedule[] CreateSchedules(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveSchedules", ReplyAction="http://tempuri.org/ISDKService/RemoveSchedulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveSchedulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveSchedules(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetSchedules", ReplyAction="http://tempuri.org/ISDKService/GetSchedulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetSchedulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Schedule[] GetSchedules(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackSchedules", ReplyAction="http://tempuri.org/ISDKService/GetPackSchedulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackSchedulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Schedule[] GetPackSchedules(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateSchedules", ReplyAction="http://tempuri.org/ISDKService/UpdateSchedulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateSchedulesServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateSchedules(string session, Timex.HirschPlugin.ServiceReference.Schedule[] Schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateShiftIntervals", ReplyAction="http://tempuri.org/ISDKService/CreateShiftIntervalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateShiftIntervalsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.ShiftInterval[] CreateShiftIntervals(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveShiftIntervals", ReplyAction="http://tempuri.org/ISDKService/RemoveShiftIntervalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveShiftIntervalsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveShiftIntervals(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetShiftIntervals", ReplyAction="http://tempuri.org/ISDKService/GetShiftIntervalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetShiftIntervalsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.ShiftInterval[] GetShiftIntervals(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackShiftIntervals", ReplyAction="http://tempuri.org/ISDKService/GetPackShiftIntervalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackShiftIntervalsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.ShiftInterval[] GetPackShiftIntervals(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdateShiftIntervals", ReplyAction="http://tempuri.org/ISDKService/UpdateShiftIntervalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdateShiftIntervalsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdateShiftIntervals(string session, Timex.HirschPlugin.ServiceReference.ShiftInterval[] ShiftInterval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreatePosts", ReplyAction="http://tempuri.org/ISDKService/CreatePostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreatePostsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Post[] CreatePosts(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemovePosts", ReplyAction="http://tempuri.org/ISDKService/RemovePostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemovePostsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemovePosts(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPosts", ReplyAction="http://tempuri.org/ISDKService/GetPostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPostsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Post[] GetPosts(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetPackPosts", ReplyAction="http://tempuri.org/ISDKService/GetPackPostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetPackPostsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.Post[] GetPackPosts(string session, int topReturnedObjects, int skipReturnedObjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/UpdatePosts", ReplyAction="http://tempuri.org/ISDKService/UpdatePostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/UpdatePostsServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void UpdatePosts(string session, Timex.HirschPlugin.ServiceReference.Post[] Post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/CreateWorkingAreas", ReplyAction="http://tempuri.org/ISDKService/CreateWorkingAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/CreateWorkingAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.WorkingArea[] CreateWorkingAreas(string session, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/RemoveWorkingAreas", ReplyAction="http://tempuri.org/ISDKService/RemoveWorkingAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/RemoveWorkingAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        void RemoveWorkingAreas(string session, string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDKService/GetWorkingAreas", ReplyAction="http://tempuri.org/ISDKService/GetWorkingAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Timex.HirschPlugin.ServiceReference.ServiceFaut), Action="http://tempuri.org/ISDKService/GetWorkingAreasServiceFautFault", Name="ServiceFaut", Namespace="http://schemas.datacontract.org/2004/07/ArmoSystems.Timex.Shared.DBObserver")]
        Timex.HirschPlugin.ServiceReference.WorkingArea[] GetWorkingAreas(string session, string[] ids);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISDKServiceChannel : Timex.HirschPlugin.ServiceReference.ISDKService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SDKServiceClient : System.ServiceModel.ClientBase<Timex.HirschPlugin.ServiceReference.ISDKService>, Timex.HirschPlugin.ServiceReference.ISDKService {
        
        public SDKServiceClient() {
        }
        
        public SDKServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SDKServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDKServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDKServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Timex.HirschPlugin.ServiceReference.WorkingArea[] GetPackWorkingAreas(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackWorkingAreas(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateWorkingAreas(string session, Timex.HirschPlugin.ServiceReference.WorkingArea[] WorkingArea) {
            base.Channel.UpdateWorkingAreas(session, WorkingArea);
        }
        
        public Timex.HirschPlugin.ServiceReference.Rule[] CreateRules(string session, int count) {
            return base.Channel.CreateRules(session, count);
        }
        
        public void RemoveRules(string session, string[] ids) {
            base.Channel.RemoveRules(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Rule[] GetRules(string session, string[] ids) {
            return base.Channel.GetRules(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Rule[] GetPackRules(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackRules(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateRules(string session, Timex.HirschPlugin.ServiceReference.Rule[] Rule) {
            base.Channel.UpdateRules(session, Rule);
        }
        
        public Timex.HirschPlugin.ServiceReference.DayShift[] CreateDayShifts(string session, int count) {
            return base.Channel.CreateDayShifts(session, count);
        }
        
        public void RemoveDayShifts(string session, string[] ids) {
            base.Channel.RemoveDayShifts(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.DayShift[] GetDayShifts(string session, string[] ids) {
            return base.Channel.GetDayShifts(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.DayShift[] GetPackDayShifts(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackDayShifts(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateDayShifts(string session, Timex.HirschPlugin.ServiceReference.DayShift[] DayShift) {
            base.Channel.UpdateDayShifts(session, DayShift);
        }
        
        public Timex.HirschPlugin.ServiceReference.Shift[] CreateShifts(string session, int count) {
            return base.Channel.CreateShifts(session, count);
        }
        
        public void RemoveShifts(string session, string[] ids) {
            base.Channel.RemoveShifts(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Shift[] GetShifts(string session, string[] ids) {
            return base.Channel.GetShifts(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Shift[] GetPackShifts(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackShifts(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateShifts(string session, Timex.HirschPlugin.ServiceReference.Shift[] Shift) {
            base.Channel.UpdateShifts(session, Shift);
        }
        
        public Timex.HirschPlugin.ServiceReference.Enter[] GetEnters(string session, string[] ids) {
            return base.Channel.GetEnters(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Enter[] GetPackEnters(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackEnters(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.Exit[] GetExits(string session, string[] ids) {
            return base.Channel.GetExits(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Exit[] GetPackExits(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackExits(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.TimexOperator[] GetTimexOperators(string session, string[] ids) {
            return base.Channel.GetTimexOperators(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.TimexOperator[] GetPackTimexOperators(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackTimexOperators(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.TimeZone[] GetTimeZones(string session, string[] ids) {
            return base.Channel.GetTimeZones(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.TimeZone[] GetPackTimeZones(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackTimeZones(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.AccessLevel[] CreateAccessLevels(string session, int count) {
            return base.Channel.CreateAccessLevels(session, count);
        }
        
        public void RemoveAccessLevels(string session, string[] ids) {
            base.Channel.RemoveAccessLevels(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.AccessLevel[] GetAccessLevels(string session, string[] ids) {
            return base.Channel.GetAccessLevels(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.AccessLevel[] GetPackAccessLevels(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackAccessLevels(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateAccessLevels(string session, Timex.HirschPlugin.ServiceReference.AccessLevel[] AccessLevel) {
            base.Channel.UpdateAccessLevels(session, AccessLevel);
        }
        
        public Timex.HirschPlugin.ServiceReference.Area[] CreateAreas(string session, int count) {
            return base.Channel.CreateAreas(session, count);
        }
        
        public void RemoveAreas(string session, string[] ids) {
            base.Channel.RemoveAreas(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Area[] GetAreas(string session, string[] ids) {
            return base.Channel.GetAreas(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Area[] GetPackAreas(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackAreas(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateAreas(string session, Timex.HirschPlugin.ServiceReference.Area[] Area) {
            base.Channel.UpdateAreas(session, Area);
        }
        
        public Timex.HirschPlugin.ServiceReference.WorktimeInfo[] GetWorkTimeInfo(string session, string employeeId, System.DateTime startDate, System.DateTime endDate, string ruleId, bool isCalculateBySchedule) {
            return base.Channel.GetWorkTimeInfo(session, employeeId, startDate, endDate, ruleId, isCalculateBySchedule);
        }
        
        public Timex.HirschPlugin.ServiceReference.WorktimeEvent[] GetWorktimeEvents(string session, System.DateTime fromUTC, System.DateTime toUTC, string timeZoneId, string employeeId, int maxCount, bool recent, string appName) {
            return base.Channel.GetWorktimeEvents(session, fromUTC, toUTC, timeZoneId, employeeId, maxCount, recent, appName);
        }
        
        public int CreateWorktimeEvent(string session, string appName, string employeeId, string registrationPointId, System.DateTime timeUTC, string timeZoneId) {
            return base.Channel.CreateWorktimeEvent(session, appName, employeeId, registrationPointId, timeUTC, timeZoneId);
        }
        
        public void RemoveWorktimeEvent(string session, string worktimeEventId) {
            base.Channel.RemoveWorktimeEvent(session, worktimeEventId);
        }
        
        public Timex.HirschPlugin.ServiceReference.Adjustment[] GetAdjustmentsByInterval(string session, string employeeId, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetAdjustmentsByInterval(session, employeeId, beginDate, endDate);
        }
        
        public Timex.HirschPlugin.ServiceReference.Shift GetShiftByDate(string session, string employeeId, System.DateTime date) {
            return base.Channel.GetShiftByDate(session, employeeId, date);
        }
        
        public string[] GetEventTypes(string session) {
            return base.Channel.GetEventTypes(session);
        }
        
        public void AccessPointsOpen(string session, string[] accessPointIds) {
            base.Channel.AccessPointsOpen(session, accessPointIds);
        }
        
        public void AccessPointsClose(string session, string[] accessPointIds) {
            base.Channel.AccessPointsClose(session, accessPointIds);
        }
        
        public void AccessPointsUnblock(string session, string[] accessPointIds) {
            base.Channel.AccessPointsUnblock(session, accessPointIds);
        }
        
        public void SubscribeOnEvents(string session, string[] eventType) {
            base.Channel.SubscribeOnEvents(session, eventType);
        }
        
        public void UnsubscribeFromEvents(string session, string[] eventType) {
            base.Channel.UnsubscribeFromEvents(session, eventType);
        }
        
        public string LogonUser(string userName, string password, string address) {
            return base.Channel.LogonUser(userName, password, address);
        }
        
        public void LogoutUser(string session) {
            base.Channel.LogoutUser(session);
        }
        
        public void HeartBeat(string session) {
            base.Channel.HeartBeat(session);
        }
        
        public Timex.HirschPlugin.ServiceReference.Adjustment[] GetAdjustments(string session, string[] ids) {
            return base.Channel.GetAdjustments(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Adjustment[] GetPackAdjustments(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackAdjustments(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.Department[] CreateDepartments(string session, int count) {
            return base.Channel.CreateDepartments(session, count);
        }
        
        public void RemoveDepartments(string session, string[] ids) {
            base.Channel.RemoveDepartments(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Department[] GetDepartments(string session, string[] ids) {
            return base.Channel.GetDepartments(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Department[] GetPackDepartments(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackDepartments(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateDepartments(string session, Timex.HirschPlugin.ServiceReference.Department[] Department) {
            base.Channel.UpdateDepartments(session, Department);
        }
        
        public Timex.HirschPlugin.ServiceReference.Company[] CreateCompanies(string session, int count) {
            return base.Channel.CreateCompanies(session, count);
        }
        
        public void RemoveCompanies(string session, string[] ids) {
            base.Channel.RemoveCompanies(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Company[] GetCompanies(string session, string[] ids) {
            return base.Channel.GetCompanies(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Company[] GetPackCompanies(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackCompanies(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateCompanies(string session, Timex.HirschPlugin.ServiceReference.Company[] Company) {
            base.Channel.UpdateCompanies(session, Company);
        }
        
        public Timex.HirschPlugin.ServiceReference.AdditionalReader[] GetAdditionalReaders(string session, string[] ids) {
            return base.Channel.GetAdditionalReaders(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.AdditionalReader[] GetPackAdditionalReaders(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackAdditionalReaders(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] CreateSchedulesWithStartDate(string session, int count) {
            return base.Channel.CreateSchedulesWithStartDate(session, count);
        }
        
        public void RemoveSchedulesWithStartDate(string session, string[] ids) {
            base.Channel.RemoveSchedulesWithStartDate(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] GetSchedulesWithStartDate(string session, string[] ids) {
            return base.Channel.GetSchedulesWithStartDate(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] GetPackSchedulesWithStartDate(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackSchedulesWithStartDate(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateSchedulesWithStartDate(string session, Timex.HirschPlugin.ServiceReference.ScheduleWithStartDate[] ScheduleWithStartDate) {
            base.Channel.UpdateSchedulesWithStartDate(session, ScheduleWithStartDate);
        }
        
        public Timex.HirschPlugin.ServiceReference.DirectedArea[] CreateDirectedAreas(string session, int count) {
            return base.Channel.CreateDirectedAreas(session, count);
        }
        
        public void RemoveDirectedAreas(string session, string[] ids) {
            base.Channel.RemoveDirectedAreas(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.DirectedArea[] GetDirectedAreas(string session, string[] ids) {
            return base.Channel.GetDirectedAreas(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.DirectedArea[] GetPackDirectedAreas(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackDirectedAreas(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateDirectedAreas(string session, Timex.HirschPlugin.ServiceReference.DirectedArea[] DirectedArea) {
            base.Channel.UpdateDirectedAreas(session, DirectedArea);
        }
        
        public Timex.HirschPlugin.ServiceReference.Workstation[] GetWorkstations(string session, string[] ids) {
            return base.Channel.GetWorkstations(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Workstation[] GetPackWorkstations(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackWorkstations(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.Device[] GetDevices(string session, string[] ids) {
            return base.Channel.GetDevices(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Device[] GetPackDevices(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackDevices(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.LogicalElement[] GetLogicalElements(string session, string[] ids) {
            return base.Channel.GetLogicalElements(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.LogicalElement[] GetPackLogicalElements(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackLogicalElements(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.LogicalLink[] GetLogicalLinks(string session, string[] ids) {
            return base.Channel.GetLogicalLinks(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.LogicalLink[] GetPackLogicalLinks(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackLogicalLinks(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.AccessPoint[] GetAccessPoints(string session, string[] ids) {
            return base.Channel.GetAccessPoints(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.AccessPoint[] GetPackAccessPoints(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackAccessPoints(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public Timex.HirschPlugin.ServiceReference.RegistrationPoint[] CreateRegistrationPoints(string session, int count) {
            return base.Channel.CreateRegistrationPoints(session, count);
        }
        
        public void RemoveRegistrationPoints(string session, string[] ids) {
            base.Channel.RemoveRegistrationPoints(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.RegistrationPoint[] GetRegistrationPoints(string session, string[] ids) {
            return base.Channel.GetRegistrationPoints(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.RegistrationPoint[] GetPackRegistrationPoints(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackRegistrationPoints(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateRegistrationPoints(string session, Timex.HirschPlugin.ServiceReference.RegistrationPoint[] RegistrationPoint) {
            base.Channel.UpdateRegistrationPoints(session, RegistrationPoint);
        }
        
        public Timex.HirschPlugin.ServiceReference.Employee[] CreateEmployees(string session, int count) {
            return base.Channel.CreateEmployees(session, count);
        }
        
        public void RemoveEmployees(string session, string[] ids) {
            base.Channel.RemoveEmployees(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Employee[] GetEmployees(string session, string[] ids) {
            return base.Channel.GetEmployees(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Employee[] GetPackEmployees(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackEmployees(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateEmployees(string session, Timex.HirschPlugin.ServiceReference.Employee[] Employee) {
            base.Channel.UpdateEmployees(session, Employee);
        }
        
        public Timex.HirschPlugin.ServiceReference.EmployeeDetailInfo[] GetDetailInfoEmployees(string session, string[] ids) {
            return base.Channel.GetDetailInfoEmployees(session, ids);
        }
        
        public void UpdateDetailInfoEmployees(string session, Timex.HirschPlugin.ServiceReference.EmployeeDetailInfo[] Employee) {
            base.Channel.UpdateDetailInfoEmployees(session, Employee);
        }
        
        public Timex.HirschPlugin.ServiceReference.Schedule[] CreateSchedules(string session, int count) {
            return base.Channel.CreateSchedules(session, count);
        }
        
        public void RemoveSchedules(string session, string[] ids) {
            base.Channel.RemoveSchedules(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Schedule[] GetSchedules(string session, string[] ids) {
            return base.Channel.GetSchedules(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Schedule[] GetPackSchedules(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackSchedules(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateSchedules(string session, Timex.HirschPlugin.ServiceReference.Schedule[] Schedule) {
            base.Channel.UpdateSchedules(session, Schedule);
        }
        
        public Timex.HirschPlugin.ServiceReference.ShiftInterval[] CreateShiftIntervals(string session, int count) {
            return base.Channel.CreateShiftIntervals(session, count);
        }
        
        public void RemoveShiftIntervals(string session, string[] ids) {
            base.Channel.RemoveShiftIntervals(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.ShiftInterval[] GetShiftIntervals(string session, string[] ids) {
            return base.Channel.GetShiftIntervals(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.ShiftInterval[] GetPackShiftIntervals(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackShiftIntervals(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdateShiftIntervals(string session, Timex.HirschPlugin.ServiceReference.ShiftInterval[] ShiftInterval) {
            base.Channel.UpdateShiftIntervals(session, ShiftInterval);
        }
        
        public Timex.HirschPlugin.ServiceReference.Post[] CreatePosts(string session, int count) {
            return base.Channel.CreatePosts(session, count);
        }
        
        public void RemovePosts(string session, string[] ids) {
            base.Channel.RemovePosts(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Post[] GetPosts(string session, string[] ids) {
            return base.Channel.GetPosts(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.Post[] GetPackPosts(string session, int topReturnedObjects, int skipReturnedObjects) {
            return base.Channel.GetPackPosts(session, topReturnedObjects, skipReturnedObjects);
        }
        
        public void UpdatePosts(string session, Timex.HirschPlugin.ServiceReference.Post[] Post) {
            base.Channel.UpdatePosts(session, Post);
        }
        
        public Timex.HirschPlugin.ServiceReference.WorkingArea[] CreateWorkingAreas(string session, int count) {
            return base.Channel.CreateWorkingAreas(session, count);
        }
        
        public void RemoveWorkingAreas(string session, string[] ids) {
            base.Channel.RemoveWorkingAreas(session, ids);
        }
        
        public Timex.HirschPlugin.ServiceReference.WorkingArea[] GetWorkingAreas(string session, string[] ids) {
            return base.Channel.GetWorkingAreas(session, ids);
        }
    }
}
